//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.language
{ 

public sealed partial class Language :  Bright.Config.BeanBase 
{
    public Language(JSONNode _json) 
    {
        { if(!_json["strId"].IsString) { throw new SerializationException(); }  StrId = _json["strId"]; }
        { if(!_json["Chinese"].IsString) { throw new SerializationException(); }  Chinese = _json["Chinese"]; }
        { if(!_json["English"].IsString) { throw new SerializationException(); }  English = _json["English"]; }
        PostInit();
    }

    public Language(string strId, string Chinese, string English ) 
    {
        this.StrId = strId;
        this.Chinese = Chinese;
        this.English = English;
        PostInit();
    }

    public static Language DeserializeLanguage(JSONNode _json)
    {
        return new language.Language(_json);
    }

    /// <summary>
    /// 这是id
    /// </summary>
    public string StrId { get; private set; }
    /// <summary>
    /// 文字
    /// </summary>
    public string Chinese { get; private set; }
    /// <summary>
    /// 文字
    /// </summary>
    public string English { get; private set; }

    public const int __ID__ = 2040174926;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "StrId:" + StrId + ","
        + "Chinese:" + Chinese + ","
        + "English:" + English + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
